<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Flask on DevSetGo.com</title>
    <link>/tags/flask/</link>
    <description>Recent content in Flask on DevSetGo.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 22 Apr 2019 12:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/flask/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Using Spring Cloud Config with Python Requests</title>
      <link>/posts/2019-4-22-spring-cloud-config/</link>
      <pubDate>Mon, 22 Apr 2019 12:00:00 +0000</pubDate>
      
      <guid>/posts/2019-4-22-spring-cloud-config/</guid>
      <description>At work we use Spring Cloud Config as part of are management of external dependencies for JAVA APIs. So I thought this would be useful to manage dependencies for Python applications also and an effective way of dealing with external environment variables when deploying a docker image as part of a Twelve Factor App.
Why is this important?
 You don&amp;rsquo;t want to hardcode your configuration (keys, IP address, userid, passwords) Deploying .</description>
    </item>
    
    <item>
      <title>Cookiecutter Flask SB Admin</title>
      <link>/posts/2019-1-1-cookiecutter-flask-sbadmin/</link>
      <pubDate>Tue, 01 Jan 2019 21:54:49 -0500</pubDate>
      
      <guid>/posts/2019-1-1-cookiecutter-flask-sbadmin/</guid>
      <description>Cookiecutter is a template builder for Python applications. Steven Loria has a great and popular cookiecutter-flask that is a great starting point. I have been wanting to use a dashboard style bootstrap template called SB Admin. I have a couple projects I have been working to adapt the template too. The idea to create a cookiecutter came from looking back at Steven Loria&amp;rsquo;s cookiecutter to work on flask-login and blueprints.</description>
    </item>
    
  </channel>
</rss>